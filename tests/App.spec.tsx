import React from 'react';
import { render, screen } from '@testing-library/react';
import App from '../src/App';

describe('App Component', () => {
  it('should render the main header', () => {
    render(<App />);
    expect(screen.getByText('GitHub & Actions KPI Dashboard')).toBeDefined();
  });

  it('should render the subtitle', () => {
    render(<App />);
    expect(screen.getByText('Key Performance Indicators for Engineering Excellence')).toBeDefined();
  });

  it('should render the footer', () => {
    render(<App />);
    expect(screen.getByText('Dashboard generated by World-Class Senior Frontend React Engineer')).toBeDefined();
  });

  it('should have proper main layout structure', () => {
    const { container } = render(<App />);
    const appDiv = container.firstChild as HTMLElement;
    
    expect(appDiv.className).toContain('min-h-screen');
    expect(appDiv.className).toContain('bg-background');
    expect(appDiv.className).toContain('font-sans');
  });

  it('should render the GitHub icon in header', () => {
    const { container } = render(<App />);
    const icon = container.querySelector('svg');
    expect(icon).toBeDefined();
  });

  it('should have proper header structure', () => {
    const { container } = render(<App />);
    const header = container.querySelector('header');
    
    expect(header).toBeDefined();
    expect(header?.className).toContain('py-6');
    expect(header?.className).toContain('px-4');
  });

  it('should have proper main content structure', () => {
    const { container } = render(<App />);
    const main = container.querySelector('main');
    
    expect(main).toBeDefined();
    expect(main?.className).toContain('py-6');
    expect(main?.className).toContain('px-4');
  });

  it('should have proper footer structure', () => {
    const { container } = render(<App />);
    const footer = container.querySelector('footer');
    
    expect(footer).toBeDefined();
    expect(footer?.className).toContain('text-center');
    expect(footer?.className).toContain('py-4');
    expect(footer?.className).toContain('text-text-secondary');
    expect(footer?.className).toContain('text-sm');
  });

  it('should render header title as h1 element', () => {
    render(<App />);
    const title = screen.getByRole('heading', { level: 1 });
    expect(title).toBeDefined();
    expect(title.textContent).toBe('GitHub & Actions KPI Dashboard');
  });

  it('should have responsive layout classes', () => {
    const { container } = render(<App />);
    const headerWrapper = container.querySelector('header .max-w-7xl');
    const mainWrapper = container.querySelector('main .max-w-7xl');
    
    expect(headerWrapper).toBeDefined();
    expect(mainWrapper).toBeDefined();
    expect(headerWrapper?.className).toContain('mx-auto');
    expect(mainWrapper?.className).toContain('mx-auto');
  });
});